---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: latencies.core.skycluster.io
spec:
  group: core.skycluster.io
  names:
    kind: Latency
    listKind: LatencyList
    plural: latencies
    singular: latency
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.lastMeasuredMs
      name: Last_Latency(ms)
      type: string
    - jsonPath: .status.p99
      name: P99(ms)
      type: string
    - jsonPath: .status.lastMeasuredAt
      name: Last_Measured
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Latency is the Schema for the latencies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of Latency
            properties:
              fixedLatencyMs:
                description: FixedLatencyMs is the seeded latency (from your fixed
                  table)
                type: string
              providerRefA:
                description: ProviderA and ProviderB are canonical sorted provider
                  names (A < B)
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              providerRefB:
                description: |-
                  LocalObjectReference contains enough information to let you locate the
                  referenced object inside the same namespace.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - providerRefA
            - providerRefB
            type: object
          status:
            description: status defines the observed state of Latency
            properties:
              lastMeasuredAt:
                format: date-time
                type: string
              lastMeasuredMs:
                type: string
              measurementCount:
                type: integer
              p50:
                type: string
              p95:
                type: string
              p99:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
