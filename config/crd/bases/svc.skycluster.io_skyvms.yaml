---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: skyvms.svc.skycluster.io
spec:
  group: svc.skycluster.io
  names:
    kind: SkyVM
    listKind: SkyVMList
    plural: skyvms
    singular: skyvm
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SkyVM is the Schema for the skyvms API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SkyVMSpec defines the desired state of SkyVM.
            properties:
              flavor:
                description: Flavor is the size of the VM
                type: string
              iPForwarding:
                description: IPForwarding is whether the VM should have IP forwarding
                  enabled
                type: boolean
              image:
                description: Image is the image to use for the VM
                type: string
              providerRef:
                description: ProviderRef is the reference to the provider that this
                  VM should be deployed to
                properties:
                  name:
                    type: string
                  platform:
                    type: string
                  region:
                    type: string
                  regionAlias:
                    type: string
                  type:
                    type: string
                  zone:
                    type: string
                type: object
              publicIp:
                description: PublicIP is whether the VM should have a public IP
                type: boolean
              publicKey:
                description: PublicKey is the SSH public key to add to the VM
                type: string
              secGroup:
                description: SecGroup is the security group definition to apply to
                  the VM
                items:
                  properties:
                    description:
                      description: Description is the description of the security
                        group
                      type: string
                    tcpPorts:
                      description: TCPPorts is the list of TCP ports to open
                      items:
                        properties:
                          fromPort:
                            description: FromPort is the starting port number
                            type: integer
                          toPort:
                            description: ToPort is the ending port number
                            type: integer
                        required:
                        - fromPort
                        - toPort
                        type: object
                      type: array
                    udpPorts:
                      description: UDPPorts is the list of UDP ports to open
                      items:
                        properties:
                          fromPort:
                            description: FromPort is the starting port number
                            type: integer
                          toPort:
                            description: ToPort is the ending port number
                            type: integer
                        required:
                        - fromPort
                        - toPort
                        type: object
                      type: array
                  type: object
                type: array
              userData:
                description: UserData is the cloud-init script to run on the VM, shoud
                  follow the cloud-init format
                type: string
            type: object
          status:
            description: SkyVMStatus defines the observed state of SkyVM.
            properties:
              dependedBy:
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              dependsOn:
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
