apiVersion: v1
kind: Namespace
metadata:
  name: echo-app
  labels:
    skycluster.io/app-id: echo-app
    skycluster.io/app-scope: distributed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-app
  namespace: echo-app
  labels:
    skycluster.io/app-id: echo-app
    skycluster.io/app-scope: distributed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-app
  template:
    metadata:
      labels:
        app: echo-app
    spec:
      containers:
      - name: echo
        image: alpine/curl:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            while true; do
              CONTENT=$(ip route get 8.8.8.8 | awk '{printf "Hey, my ip is: %s,", $7; exit}')
              HOSTNAME=$(hostname)
              CONTENT="$CONTENT\tHostname: $HOSTNAME"
              CONTENT_LENGTH=$(echo -n "$CONTENT" | wc -c)
              echo -e "HTTP/1.1 200 OK\r\nContent-Length: $CONTENT_LENGTH\r\n\r\n$CONTENT" | nc -l -p 8080
            done
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netshoot-app
  namespace: echo-app
  labels:
    skycluster.io/app-id: echo-app
    skycluster.io/app-scope: distributed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netshoot-app
  template:
    metadata:
      labels:
        app: netshoot-app
    spec:
      containers:
      - name: network-tools
        image: nicolaka/netshoot
        command: ["sleep", "infinity"]
---
apiVersion: v1
kind: Service
metadata:
  name: echo-app
  namespace: echo-app
  labels:
    skycluster.io/app-id: echo-app
    skycluster.io/app-scope: distributed
spec:
  selector:
    app: echo-app
  ports:
    - port: 8080
      targetPort: 8080