//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSecret) DeepCopyInto(out *ConnectionSecret) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSecret.
func (in *ConnectionSecret) DeepCopy() *ConnectionSecret {
	if in == nil {
		return nil
	}
	out := new(ConnectionSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployMap) DeepCopyInto(out *DeployMap) {
	*out = *in
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = make([]SkyService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Edges != nil {
		in, out := &in.Edges, &out.Edges
		*out = make([]DeployMapEdge, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployMap.
func (in *DeployMap) DeepCopy() *DeployMap {
	if in == nil {
		return nil
	}
	out := new(DeployMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployMapEdge) DeepCopyInto(out *DeployMapEdge) {
	*out = *in
	in.From.DeepCopyInto(&out.From)
	in.To.DeepCopyInto(&out.To)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployMapEdge.
func (in *DeployMapEdge) DeepCopy() *DeployMapEdge {
	if in == nil {
		return nil
	}
	out := new(DeployMapEdge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationCondition) DeepCopyInto(out *LocationCondition) {
	*out = *in
	if in.AnyOf != nil {
		in, out := &in.AnyOf, &out.AnyOf
		*out = make([]ProviderRefSpec, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationCondition.
func (in *LocationCondition) DeepCopy() *LocationCondition {
	if in == nil {
		return nil
	}
	out := new(LocationCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationConstraint) DeepCopyInto(out *LocationConstraint) {
	*out = *in
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = make([]LocationCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Permitted != nil {
		in, out := &in.Permitted, &out.Permitted
		*out = make([]ProviderRefSpec, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationConstraint.
func (in *LocationConstraint) DeepCopy() *LocationConstraint {
	if in == nil {
		return nil
	}
	out := new(LocationConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedK8s) DeepCopyInto(out *ManagedK8s) {
	*out = *in
	out.Overhead = in.Overhead
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedK8s.
func (in *ManagedK8s) DeepCopy() *ManagedK8s {
	if in == nil {
		return nil
	}
	out := new(ManagedK8s)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedK8sOverhead) DeepCopyInto(out *ManagedK8sOverhead) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedK8sOverhead.
func (in *ManagedK8sOverhead) DeepCopy() *ManagedK8sOverhead {
	if in == nil {
		return nil
	}
	out := new(ManagedK8sOverhead)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringSpec) DeepCopyInto(out *MonitoringSpec) {
	*out = *in
	out.ConnectionSecret = in.ConnectionSecret
	out.Schedule = in.Schedule
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringSpec.
func (in *MonitoringSpec) DeepCopy() *MonitoringSpec {
	if in == nil {
		return nil
	}
	out := new(MonitoringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderRefSpec) DeepCopyInto(out *ProviderRefSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderRefSpec.
func (in *ProviderRefSpec) DeepCopy() *ProviderRefSpec {
	if in == nil {
		return nil
	}
	out := new(ProviderRefSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkyComponent) DeepCopyInto(out *SkyComponent) {
	*out = *in
	out.Components = in.Components
	out.Provider = in.Provider
	in.LocationConstraint.DeepCopyInto(&out.LocationConstraint)
	if in.VirtualServices != nil {
		in, out := &in.VirtualServices, &out.VirtualServices
		*out = make([]VirtualService, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkyComponent.
func (in *SkyComponent) DeepCopy() *SkyComponent {
	if in == nil {
		return nil
	}
	out := new(SkyComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkyObject) DeepCopyInto(out *SkyObject) {
	*out = *in
	in.Manifest.DeepCopyInto(&out.Manifest)
	out.ProviderRef = in.ProviderRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkyObject.
func (in *SkyObject) DeepCopy() *SkyObject {
	if in == nil {
		return nil
	}
	out := new(SkyObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkyScheduleSpec) DeepCopyInto(out *SkyScheduleSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkyScheduleSpec.
func (in *SkyScheduleSpec) DeepCopy() *SkyScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(SkyScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkyService) DeepCopyInto(out *SkyService) {
	*out = *in
	out.ComponentRef = in.ComponentRef
	out.ProviderRef = in.ProviderRef
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkyService.
func (in *SkyService) DeepCopy() *SkyService {
	if in == nil {
		return nil
	}
	out := new(SkyService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualService) DeepCopyInto(out *VirtualService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualService.
func (in *VirtualService) DeepCopy() *VirtualService {
	if in == nil {
		return nil
	}
	out := new(VirtualService)
	in.DeepCopyInto(out)
	return out
}
